{"version":3,"sources":["ng2-material-dropdown/src/modules/components/button/ng2-dropdown-button.ts","ng2-material-dropdown/src/modules/components/menu/actions.ts","ng2-material-dropdown/src/modules/services/ng2-dropdown-state.ts","ng2-material-dropdown/src/modules/services/dropdown-state.service.ts","ng2-material-dropdown/src/modules/components/menu-item/ng2-menu-item.ts","ng2-material-dropdown/src/modules/components/menu/ng2-dropdown-menu.ts","ng2-material-dropdown/src/modules/components/dropdown/ng2-dropdown.ts","ng2-material-dropdown/src/modules/ng2-dropdown.module.ts","ng2-material-dropdown/ng2-material-dropdown.ts","ngx-chips/core/pipes/highlight.pipe.ts","ngx-chips/core/constants/index.ts","ngx-chips/core/providers/drag-provider.ts","ngx-chips/defaults.ts","ngx-chips/core/providers/options-provider.ts","ngx-chips/core/accessor.ts","ngx-chips/core/helpers/listen.ts","ngx-chips/components/tag-input-form/tag-input-form.component.ts","ngx-chips/components/tag/tag-ripple.component.ts","ngx-chips/components/tag/tag.component.ts","ngx-chips/components/tag-input/animations.ts","ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ngx-chips/components/tag-input/tag-input.ts","ngx-chips/components/icon/icon.ts","ngx-chips/tag-input.module.ts","ngx-chips/ngx-chips.ts","jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.component.ts","jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.module.ts"],"names":["tslib_1.__decorate","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","file":"default~client-client-module~forms-forms-module.js","sourcesContent":["import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef\n} from '@angular/core';\n\n@Component({\n    selector: 'ng2-dropdown-button',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html'\n})\nexport class Ng2DropdownButton {\n    @Output() public onMenuToggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() public showCaret: boolean = true;\n\n    constructor(private element: ElementRef) {}\n\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    public toggleMenu(): void {\n        this.onMenuToggled.emit(true);\n    }\n\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n    public getPosition(): ClientRect {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\n}\n","import { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { Ng2DropdownMenu } from './ng2-dropdown-menu';\nimport { Ng2DropdownState } from '../../services/ng2-dropdown-state';\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    } else {\n        state.select(items[0], true);\n    }\n};\n\nfunction onEscape(this: Ng2DropdownMenu) {\n    this.hide();\n};\n\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nexport const ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\n\nexport function arrowKeysHandler(event): void {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Ng2MenuItem } from '../components/menu-item/ng2-menu-item';\nexport class Ng2DropdownState {\n    public onItemSelected: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemClicked: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemDestroyed: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n\n    private _selectedItem: Ng2MenuItem;\n\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this._selectedItem;\n    }\n\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n    public select(item: Ng2MenuItem | undefined, dispatchEvent = true): void {\n        this._selectedItem = item;\n\n        if (!dispatchEvent || !item) {\n            return;\n        }\n\n        item.focus();\n\n        this.onItemSelected.emit(item);\n    }\n\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    public unselect(): void {\n        this._selectedItem = undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Ng2DropdownState } from './ng2-dropdown-state';\n\n@Injectable()\nexport class DropdownStateService {\n    public menuState = {\n        isVisible: false,\n        toString(): string {\n            return this.isVisible === true ? 'visible' : 'hidden';\n        }\n    };\n\n    public dropdownState = new Ng2DropdownState();\n}\n","import { Component, Input, ElementRef, OnDestroy } from '@angular/core';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-menu-item',\n    styleUrls: ['./style.scss'],\n    template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class Ng2MenuItem implements OnDestroy {\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     */\n    @Input() public preventClose = false;\n\n    /**\n     * @name value\n     * @desc any value associated to the item\n     */\n    @Input() public value: any;\n\n    constructor(\n        private state: DropdownStateService,\n        private element: ElementRef\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n    public get isSelected(): boolean {\n        return this === this.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    public select($event?): void {\n        this.state.dropdownState.select(this, true);\n\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    public click(): void {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus() {\n        this.element.nativeElement.children[0].focus();\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Renderer2,\n    ContentChildren,\n    QueryList,\n    Input\n} from '@angular/core';\n\nimport {\n    trigger,\n    style,\n    transition,\n    animate,\n    keyframes,\n    state\n} from '@angular/animations';\n\nimport { ACTIONS, arrowKeysHandler } from './actions';\n\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown-menu',\n    styleUrls: ['./style.scss'],\n    template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `,\n    animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n            state(\n                'hidden',\n                style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })\n            ),\n            transition('hidden => visible', [\n                animate(\n                    '250ms ease-in',\n                    style({ opacity: 1, height: '*', width: '*' })\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '350ms ease-out',\n                    style({ opacity: 0, width: 0, height: 0 })\n                )\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate(\n                    '450ms ease-in',\n                    keyframes([\n                        style({ opacity: 0, offset: 0 }),\n                        style({ opacity: 1, offset: 1 })\n                    ])\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '250ms ease-out',\n                    keyframes([\n                        style({ opacity: 1, offset: 0 }),\n                        style({ opacity: 0.5, offset: 0.3 }),\n                        style({ opacity: 0, offset: 1 })\n                    ])\n                )\n            ])\n        ])\n    ]\n})\nexport class Ng2DropdownMenu {\n    /**\n     * @name width\n     */\n    @Input() public width = 4;\n\n    /**\n     * @description if set to true, the first element of the dropdown will be automatically focused\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = true;\n\n    /**\n     * @description sets dropdown offset from the button\n     * @name offset {string} follow format '<number> <number>' ex. '0 20'\n     */\n    @Input() public offset: string;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = true;\n\n    /**\n     * @name zIndex\n     */\n    @Input() public zIndex = 1000;\n\n    /**\n     * @name items\n     */\n    @ContentChildren(Ng2MenuItem, { descendants: true })\n    public items!: QueryList<Ng2MenuItem>;\n\n    private position: ClientRect;\n\n    private listeners = {\n        arrowHandler: undefined,\n        handleKeypress: undefined\n    };\n\n    constructor(\n        public dropdownState: DropdownStateService,\n        private element: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    public show(position?: ClientRect, dynamic = true): void {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        const wd = typeof window !== 'undefined' ? window : undefined;\n\n        if (!this.dropdownState.menuState.isVisible) {\n            // setting handlers\n            this.listeners.handleKeypress = this.renderer.listen(\n                dc.body,\n                'keydown',\n                this.handleKeypress.bind(this)\n            );\n            this.listeners.arrowHandler = this.renderer.listen(\n                wd,\n                'keydown',\n                arrowKeysHandler\n            );\n        }\n\n        // update state\n        this.dropdownState.menuState.isVisible = true;\n\n        if (position) {\n            this.updatePosition(position, dynamic);\n        }\n    }\n\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    public hide(): void {\n        this.dropdownState.menuState.isVisible = false;\n\n        // reset selected item state\n        this.dropdownState.dropdownState.unselect();\n\n        // call function to unlisten\n        this.listeners.arrowHandler && this.listeners.arrowHandler();\n        this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n    public updatePosition(position: ClientRect, dynamic: boolean): void {\n        this.position = position;\n        this.updateOnChange(dynamic);\n    }\n\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    public handleKeypress($event): void {\n        const key = $event.keyCode;\n        const items = this.items.toArray();\n        const index = items.indexOf(\n            this.dropdownState.dropdownState.selectedItem\n        );\n\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n\n        ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n\n    /**\n     * @name getMenuElement\n     */\n    private getMenuElement(): Element {\n        return this.element.nativeElement.children[0];\n    }\n\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n    private calcPositionOffset(position): { top: string; left: string } {\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        const dc = typeof document !== 'undefined' ? document : undefined;\n\n        if (!wd || !dc || !position) {\n            return;\n        }\n\n        const element = this.getMenuElement();\n        const supportPageOffset = wd.pageXOffset !== undefined;\n        const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n\n        const x = supportPageOffset\n            ? wd.pageXOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollLeft\n            : dc.body.scrollLeft;\n\n        const y = supportPageOffset\n            ? wd.pageYOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollTop\n            : dc.body.scrollTop;\n\n        let { top, left } = this.applyOffset(\n            `${position.top + (this.appendToBody ? y - 15 : 0)}px`,\n            `${position.left + x - 5}px`\n        );\n\n        const clientWidth = element.clientWidth;\n        const clientHeight = element.clientHeight;\n\n        const marginFromBottom =\n            parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const marginFromRight = parseInt(left) + clientWidth;\n\n        const windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n\n        return { top, left };\n    }\n\n    private applyOffset(\n        top: string,\n        left: string\n    ): { top: string; left: string } {\n        if (!this.offset) {\n            return { top, left };\n        }\n\n        const offset = this.offset.split(' ');\n\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n\n        return { top, left };\n    }\n\n    public ngOnInit() {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n\n    public updateOnChange(dynamic = true) {\n        const element = this.getMenuElement();\n        const position = this.calcPositionOffset(this.position);\n\n        if (position) {\n            this.renderer.setStyle(element, 'top', position.top.toString());\n            this.renderer.setStyle(element, 'left', position.left.toString());\n        }\n\n        // select first item unless user disabled this option\n        if (\n            this.focusFirstElement &&\n            this.items.first &&\n            !this.dropdownState.dropdownState.selectedItem\n        ) {\n            this.dropdownState.dropdownState.select(this.items.first, false);\n        }\n    }\n\n    public ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\n}\n","import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\n\n@Component({\n    selector: 'ng2-dropdown',\n    template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n    providers: [DropdownStateService]\n})\nexport class Ng2Dropdown {\n    // get children components\n    @ContentChild(Ng2DropdownButton, { static: true })\n    public button!: Ng2DropdownButton;\n    @ContentChild(Ng2DropdownMenu, { static: true })\n    public menu!: Ng2DropdownMenu;\n\n    @Input() public dynamicUpdate = true;\n\n    // outputs\n    @Output() public onItemClicked: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onItemSelected: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n    @Output() public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n\n    constructor(private state: DropdownStateService) {}\n\n    public ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => {\n            this.onItemSelected.emit(item);\n        });\n\n        this.state.dropdownState.onItemDestroyed.subscribe(\n            (item: Ng2MenuItem) => {\n                let newSelectedItem: Ng2MenuItem | undefined;\n                const items = this.menu.items.toArray();\n\n                if (item !== this.state.dropdownState.selectedItem) {\n                    return;\n                }\n\n                if (this.menu.focusFirstElement) {\n                    newSelectedItem =\n                        item === items[0] && items.length > 1\n                            ? items[1]\n                            : items[0];\n                }\n\n                this.state.dropdownState.select(newSelectedItem);\n            }\n        );\n    }\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    public show(position = this.button.getPosition()): void {\n        this.menu.show(position, this.dynamicUpdate);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener() {\n        if (this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition(), true);\n        }\n    }\n}\n","import { Ng2Dropdown } from './components/dropdown/ng2-dropdown';\nimport { Ng2DropdownMenu } from './components/menu/ng2-dropdown-menu';\nimport { Ng2DropdownButton } from './components/button/ng2-dropdown-button';\nimport { Ng2MenuItem } from './components/menu-item/ng2-menu-item';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownStateService } from './services/dropdown-state.service';\n\n@NgModule({\n    exports: [\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown\n    ],\n    declarations: [\n        Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class Ng2DropdownModule {}\n\nexport {\n    Ng2Dropdown,\n    Ng2DropdownMenu,\n    Ng2MenuItem,\n    Ng2DropdownButton,\n    DropdownStateService\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input', { static: false }) public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple, { static: false })\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';","import {\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    Output,\r\n    HostListener,\r\n    AfterViewInit,\r\n    forwardRef,\r\n    SimpleChanges,\r\n    EventEmitter,\r\n    ViewChild,\r\n    OnChanges,\r\n    Renderer2,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nconst callback = () => {\r\n};\r\n\r\nconst CUSTOM_INPUT: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => JwBootstrapSwitchNg2Component),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'bSwitch',\r\n    providers: [CUSTOM_INPUT],\r\n    template: `\r\n      <div [ngClass]=\"getWrapperClasses()\" [style.width]=\"(handleWidth  + labelWidth ) +'px'\">\r\n          <div #container [ngClass]=\"baseClass + '-container'\"\r\n               [style.width]=\"((handleWidth * 2) + labelWidth) +'px'\"\r\n               [style.margin-left]=\"getLabelMarginLeft()\"><!--\r\n              --><span #on [innerHTML]=\"(inverse) ? offText : onText\"\r\n                [ngClass]=\"(inverse) ? getOffClasses() : getOnClasses()\"></span><!--\r\n              --><span #label [ngClass]=\"baseClass + '-label'\">&nbsp;{{ labelText }}</span><!--\r\n              --><span #off [innerHTML]=\"(inverse) ? onText : offText\"\r\n                [ngClass]=\"(inverse) ? getOnClasses() : getOffClasses()\"></span><!--\r\n              --><input type=\"checkbox\" [(ngModel)]=\"value\" [readonly]=\"readonly\" [disabled]=\"disabled\"\r\n                     (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n          </div>\r\n      </div>`\r\n})\r\n\r\nexport class JwBootstrapSwitchNg2Component implements AfterViewInit, ControlValueAccessor, OnChanges {\r\n    // Defining Default Options for Switch\r\n    public handleWidth: number = 0;\r\n    public labelWidth: number = 0;\r\n    public labelText: string = '';\r\n    public inverse: boolean = false;\r\n    public baseClass: string = 'bootstrap-switch';\r\n    public onText: string = 'ON';\r\n    public offText: string = 'OFF';\r\n    public disabled: boolean = false;\r\n    public readonly: boolean = false;\r\n\r\n    private _focused: boolean = false;\r\n    private _size: any = 'normal';\r\n    private _animate: boolean = true;\r\n    private _innerAnimate: boolean = true;\r\n    private _indeterminate: boolean = false;\r\n    private _onColor: string = 'primary';\r\n    private _offColor: string = 'default';\r\n    private _wrapperClass: string = 'wrapper';\r\n    private _innerState: boolean = false;\r\n    private _innerHandleWidth: string | number = 'auto';\r\n    private _innerLabelWidth: string | number = 'auto';\r\n\r\n    private _dragStart: any = null;\r\n    private _dragEnd: any = null;\r\n\r\n    private _onTouchedCallback: () => void = callback;\r\n    private _onChangeCallback: (_: any) => void = callback;\r\n\r\n    @Output() changeState: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    // Defining DOM Elements\r\n    @ViewChild('container') container: ElementRef;\r\n    @ViewChild('on') on: ElementRef;\r\n    @ViewChild('label') label: ElementRef;\r\n    @ViewChild('off') off: ElementRef;\r\n\r\n    private $on(): any {\r\n        return this.on.nativeElement;\r\n    }\r\n\r\n    private $off(): any {\r\n        return this.off.nativeElement;\r\n    }\r\n\r\n    private $label(): any {\r\n        return this.label.nativeElement;\r\n    }\r\n\r\n    private $container(): any {\r\n        return this.container.nativeElement;\r\n    }\r\n\r\n    /**\r\n     * @description:  Function to set the Classes for the Wrapper Div\r\n     * @returns string\r\n     */\r\n    public getWrapperClasses() {\r\n        let output: string = this.baseClass + ' ' + this.baseClass + '-' + this._wrapperClass;\r\n\r\n        if (this._focused) {\r\n            output += ' ' + this.baseClass + '-focused';\r\n        }\r\n        if (this.readonly) {\r\n            output += ' ' + this.baseClass + '-readonly';\r\n        }\r\n\r\n        if (this._size != null) {\r\n            output += ' ' + this.baseClass + '-' + this._size;\r\n        }\r\n\r\n        if (this._innerState) {\r\n            output += ' ' + this.baseClass + '-on';\r\n        } else {\r\n            output += ' ' + this.baseClass + '-off';\r\n        }\r\n\r\n        if (this._animate) {\r\n            output += ' ' + this.baseClass + '-animate';\r\n        }\r\n\r\n        if (this.disabled) {\r\n            output += ' ' + this.baseClass + '-disabled';\r\n        }\r\n\r\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\r\n            output += ' ' + this.baseClass + '-indeterminate';\r\n        }\r\n\r\n        if (this.inverse) {\r\n            output += ' ' + this.baseClass + '-inverse';\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description Function to set the css classes for #on\r\n     * @returns string\r\n     */\r\n    public getOnClasses(): string {\r\n        let output: string = this.baseClass + '-handle-on';\r\n\r\n        if (this._onColor) {\r\n            output += ' ' + this.baseClass + '-' + this._onColor;\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description Function to set the css classes for #off\r\n     * @returns string\r\n     */\r\n    public getOffClasses(): string {\r\n        let output: string = this.baseClass + '-handle-off';\r\n\r\n        if (this._offColor) {\r\n            output += ' ' + this.baseClass + '-' + this._offColor;\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description  Function set the marging of the #label when change the state\r\n     * @returns string\r\n     */\r\n    public getLabelMarginLeft(): string {\r\n        let width = (this.inverse) ? -this.handleWidth : 0;\r\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\r\n            width = -(this.handleWidth / 2);\r\n        } else if (this._dragEnd) {\r\n            width = this._dragEnd;\r\n        } else if (!this._innerState) {\r\n            if (!this.inverse) {\r\n                width = -this.handleWidth;\r\n            } else {\r\n                width = 0;\r\n            }\r\n        }\r\n        return width + 'px';\r\n    }\r\n\r\n    constructor(private cd: ChangeDetectorRef, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['setLabelText'] ||\r\n            changes['setOnText'] ||\r\n            changes['setHandleWidth'] ||\r\n            changes['setLabelWidth'] ||\r\n            changes['setOffText'] ||\r\n            changes['setSize']) {\r\n            this.calculateWith(true);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.calculateWith();\r\n    }\r\n\r\n    @HostListener('click') onClick() {\r\n        if (!this.disabled && !this.readonly && !this._dragEnd) {\r\n            this.setStateValue(!this._innerState);\r\n        } else if (this._dragEnd) {\r\n            this._dragEnd = null;\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent) {\r\n        if (!e.which || this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n        switch (e.which) {\r\n            case 37:\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                this.setStateValue(false);\r\n                break;\r\n            case 39:\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                this.setStateValue(true);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private onDragStart(e: any): void {\r\n        if (e.target === this.$label()) {\r\n            if (this._dragStart || this.disabled || this.readonly) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._dragStart = (e.pageX || e.touches[0].pageX) - parseInt(this.$container().style.marginLeft, 10);\r\n            if (this._animate) {\r\n                this._animate = !this._animate;\r\n            }\r\n        }\r\n    }\r\n\r\n    private onDragMove(e: any): void {\r\n        if (this._dragStart) {\r\n            e.preventDefault();\r\n            const difference = (e.pageX || e.touches[0].pageX) - this._dragStart;\r\n            if (difference < -Number(this.handleWidth) || difference > 0) {\r\n                return;\r\n            }\r\n            this._dragEnd = difference;\r\n        }\r\n    }\r\n\r\n    private onDragEnd(e: Event, removeDragEnd: boolean = false) {\r\n        if (this._dragStart) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (this._dragEnd) {\r\n                const state = this._dragEnd > -(Number(this.handleWidth) / 2);\r\n                this.setStateValue((this.inverse) ? !state : state);\r\n            }\r\n            this._dragStart = null;\r\n            if (removeDragEnd) {\r\n                this._dragEnd = null;\r\n            }\r\n            if (this._innerAnimate) {\r\n                this._animate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('touchstart', ['$event']) onTouchStart(e: any) {\r\n        this.onDragStart(e);\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event']) onMouseDown(e: any) {\r\n        this.onDragStart(e);\r\n    }\r\n\r\n    @HostListener('touchmove', ['$event']) onTouchMove(e: any) {\r\n        this.onDragMove(e);\r\n    }\r\n\r\n    @HostListener('mousemove', ['$event']) onMouseMove(e: any) {\r\n        this.onDragMove(e);\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event']) onMouseUp(e: Event) {\r\n        this.onDragEnd(e);\r\n    }\r\n\r\n    @HostListener('touchend', ['$event']) onTouchEnd(e: Event) {\r\n        this.onDragEnd(e, true);\r\n    }\r\n\r\n    @HostListener('mouseleave', ['$event']) onMouseLeave(e: Event) {\r\n        this.onDragEnd(e, true);\r\n    }\r\n\r\n    onFocus() {\r\n        this._focused = true;\r\n    }\r\n\r\n    onBlur() {\r\n        this._focused = false;\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    /**\r\n     * @description Function to make recalculate the size of the elements when options change\r\n     * @param disableAnimation\r\n     */\r\n    private calculateWith(disableAnimation: boolean = false): void {\r\n        if (disableAnimation && this._innerAnimate) {\r\n            this._animate = false;\r\n        }\r\n        setTimeout(() => {\r\n            this.render.setStyle(this.$on(), 'width', 'auto');\r\n            this.render.setStyle(this.$off(), 'width', 'auto');\r\n            this.render.setStyle(this.$label(), 'width', 'auto');\r\n\r\n            const width = (this._innerHandleWidth === 'auto')\r\n                ? Math.max(this.$on().offsetWidth, this.$off().offsetWidth)\r\n                : this._innerHandleWidth;\r\n\r\n            if (this.$label().offsetWidth < width) {\r\n                if (this._innerLabelWidth === 'auto') {\r\n                    this.labelWidth = Number(width);\r\n                } else {\r\n                    this.labelWidth = Number(this._innerLabelWidth);\r\n                }\r\n            } else {\r\n                if (this._innerLabelWidth === 'auto') {\r\n                    this.labelWidth = this.$label().offsetWidth;\r\n                } else {\r\n                    this.labelWidth = Number(this._innerLabelWidth);\r\n                }\r\n            }\r\n\r\n            this.handleWidth = Number(width);\r\n\r\n            this.render.setStyle(this.$label(), 'width', this.labelWidth + 'px');\r\n            this.render.setStyle(this.$on(), 'width', this.handleWidth + 'px');\r\n            this.render.setStyle(this.$off(), 'width', this.handleWidth + 'px');\r\n            setTimeout(() => {\r\n                if (disableAnimation && this._innerAnimate) {\r\n                    this._animate = true;\r\n                }\r\n            });\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    // Functions to set inputs and the private variables of the Switch\r\n    @Input('switch-base-class') set setBaseClass(value: string) {\r\n        this.baseClass = value;\r\n    }\r\n\r\n    @Input('switch-wrapper-class') set setWrapperClass(value: string) {\r\n        this._wrapperClass = value;\r\n    }\r\n\r\n    @Input('switch-off-text') set setOffText(value: string) {\r\n        this.offText = (value) ? value : 'OFF';\r\n    }\r\n\r\n    @Input('switch-label-text') set setLabelText(value: string) {\r\n        this.labelText = value;\r\n    }\r\n\r\n    @Input('switch-on-text') set setOnText(value: string) {\r\n        this.onText = (value) ? value : 'ON';\r\n    }\r\n\r\n    @Input('switch-size') set setSize(value: string) {\r\n        if (value) {\r\n            this._size = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-animate') set setAnimate(value: boolean) {\r\n        this._animate = value;\r\n        this._innerAnimate = value;\r\n    }\r\n\r\n    @Input('switch-on-color') set setOnColor(value: string) {\r\n        if (value) {\r\n            this._onColor = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-off-color') set setOffColor(value: string) {\r\n        if (value) {\r\n            this._offColor = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-disabled') set setDisabled(value: boolean) {\r\n        this.disabled = value;\r\n    }\r\n\r\n    @Input('switch-readonly') set setReadOnly(value: boolean) {\r\n        this.readonly = value;\r\n    }\r\n\r\n    @Input('switch-indeterminate') set setIndeterminate(value: boolean) {\r\n        this._indeterminate = value;\r\n    }\r\n\r\n    @Input('switch-inverse') set setInverse(value: boolean) {\r\n        this.inverse = value;\r\n    }\r\n\r\n    @Input('switch-handle-width') set setHandleWidth(value: number | 'auto') {\r\n        this._innerHandleWidth = (typeof (value) !== 'undefined') ? value : 'auto';\r\n    }\r\n\r\n    @Input('switch-label-width') set setLabelWidth(value: number | 'auto') {\r\n        this._innerLabelWidth = (typeof (value) !== 'undefined') ? value : 'auto';\r\n    }\r\n\r\n    get value(): boolean {\r\n        return this._innerState;\r\n    }\r\n\r\n    set value(v: boolean) {\r\n        if (v === null || typeof v === 'undefined') {\r\n            this._indeterminate = true;\r\n        }\r\n        this.setStateValue(v);\r\n    }\r\n\r\n    private setStateValue(v: boolean): void {\r\n        if (v !== this._innerState) {\r\n\r\n            this._onChangeCallback(v);\r\n\r\n            this.changeState.emit({\r\n                previousValue: this._innerState,\r\n                currentValue: v\r\n            });\r\n            this._innerState = v;\r\n        }\r\n    }\r\n\r\n    writeValue(value: boolean) {\r\n        if (value !== this._innerState) {\r\n            this._innerState = value;\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { JwBootstrapSwitchNg2Component } from './jw-bootstrap-switch-ng2.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [JwBootstrapSwitchNg2Component],\r\n  exports: [JwBootstrapSwitchNg2Component]\r\n})\r\nexport class JwBootstrapSwitchNg2Module { }\r\n"],"sourceRoot":"webpack:///"}