{"version":3,"sources":["./src/app/chatbox/chatbox.module.ts","./src/app/chatbox/chatbox.component.css","./src/app/chatbox/chatbox.component.ts","./src/app/chatbox/chatbox.component.html"],"names":[],"mappings":"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","file":"chatbox-chatbox-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ChatboxComponent } from './chatbox.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nconst config: SocketIoConfig = { url: 'http://localhost:2500', options: {  transports: ['polling']} };\n@NgModule({\n  declarations: [ChatboxComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SocketIoModule.forRoot(config),\n    RouterModule.forChild([\n      {\n        path:'chatbox',\n        component:ChatboxComponent\n      }\n    ])\n  ]\n})\nexport class ChatboxModule { }\n","export default \".user_name {\\r\\n    color: #afafaf;\\r\\n}\\r\\n.message {\\r\\n    padding: 10px !important;\\r\\n    transition: all 250ms ease-in-out !important;\\r\\n    border-radius: 10px !important;\\r\\n    margin-bottom: 4px !important;\\r\\n}\\r\\n.my_message {\\r\\n    background: #124244 !important;\\r\\n    color: rgb(255, 255, 255) !important;\\r\\n}\\r\\n.other_message {\\r\\n    background: #dcdcdc !important;\\r\\n    color: #000 !important;\\r\\n}\\r\\n.time {\\r\\n    color: #afafaf;\\r\\n    float: right;\\r\\n    font-size: small;\\r\\n}\\r\\n.message_row {\\r\\n    background-color: #fff;\\r\\n}\\r\\ndiv.scroll { \\r\\n    margin:4px, 4px; \\r\\n    padding:4px; \\r\\n    width: 100%; \\r\\n    height: 250px;; \\r\\n    overflow-x: hidden; \\r\\n    overflow-y: auto; \\r\\n    text-align:justify; \\r\\n} \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdGJveC9jaGF0Ym94LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSx3QkFBd0I7SUFDeEIsNENBQTRDO0lBQzVDLDhCQUE4QjtJQUM5Qiw2QkFBNkI7QUFDakM7QUFDQTtJQUNJLDhCQUE4QjtJQUM5QixvQ0FBb0M7QUFDeEM7QUFDQTtJQUNJLDhCQUE4QjtJQUM5QixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxzQkFBc0I7QUFDMUI7QUFHQTtJQUNJLGVBQWU7SUFDZixXQUFXO0lBQ1gsV0FBVztJQUNYLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NoYXRib3gvY2hhdGJveC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXJfbmFtZSB7XHJcbiAgICBjb2xvcjogI2FmYWZhZjtcclxufVxyXG4ubWVzc2FnZSB7XHJcbiAgICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMjUwbXMgZWFzZS1pbi1vdXQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1ib3R0b206IDRweCAhaW1wb3J0YW50O1xyXG59XHJcbi5teV9tZXNzYWdlIHtcclxuICAgIGJhY2tncm91bmQ6ICMxMjQyNDQgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSkgIWltcG9ydGFudDtcclxufVxyXG4ub3RoZXJfbWVzc2FnZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZGNkY2RjICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG59XHJcbi50aW1lIHtcclxuICAgIGNvbG9yOiAjYWZhZmFmO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxufVxyXG4ubWVzc2FnZV9yb3cge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxufVxyXG5cclxuXHJcbmRpdi5zY3JvbGwgeyBcclxuICAgIG1hcmdpbjo0cHgsIDRweDsgXHJcbiAgICBwYWRkaW5nOjRweDsgXHJcbiAgICB3aWR0aDogMTAwJTsgXHJcbiAgICBoZWlnaHQ6IDI1MHB4OzsgXHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47IFxyXG4gICAgb3ZlcmZsb3cteTogYXV0bzsgXHJcbiAgICB0ZXh0LWFsaWduOmp1c3RpZnk7IFxyXG59ICJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'app/service/api.service';\nimport { Socket } from 'ngx-socket-io';\n\nimport { Observable } from 'rxjs';\n//import { Socket } from 'ng-socket-io';\n\n@Component({\n  selector: 'app-chatbox',\n  templateUrl: './chatbox.component.html',\n  styleUrls: ['./chatbox.component.css']\n})\nexport class ChatboxComponent implements OnInit {\n  con;\n  clients:any=[];\n  messages:any=[];\n  receiver:any;\n  notchat:boolean=false;\n  message:any;\n  userid=localStorage.getItem(\"UserId\");\n  uname=localStorage.getItem(\"Username\");\n  client:any;\n  constructor(\n    private apiservice:ApiService,\n    public socket:Socket,\n  ) { \n    this.socket.connect();\n    this.socket.emit('set-nickname', 'admin');\n    this.GetClient();\n  }\n\n  ngOnInit(): void {\n  }\n  GetClient(){\n    this.apiservice.GetClientList().subscribe((res:any)=>{\n      this.clients = res;\n    })\n  }\n  OpenChat(uid , name){\n    this.receiver =uid;\n    this.client = name;\n    this.notchat = true;\n    this.getMessages().subscribe((message:any) => {\n      this.messages.push(message.data);\n    });\n   \n  }\n  sendMessage() {\n    debugger\n    this.socket.emit('add-message', { message: this.message,sender:this.userid,receiver:this.receiver });\n    this.message = '';\n  }\n\n   \n  getMessages() {\n    let data={\n      sender:localStorage.getItem(\"UserId\"),\n      receiver:this.receiver\n    }\n    this.apiservice.getmessages(data).subscribe((res:any)=>{\n      this.messages = res;\n    })\n\n    let observable = new Observable(observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data); \n      });\n    })\n    return observable;\n  }\n \n\n}\n","export default \"<div class=\\\"main-content buttons-with-margin \\\" >\\n    <div class=\\\"card\\\" *ngIf=\\\"!notchat\\\">\\n        <div class=\\\"row\\\">\\n        \\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h4 class=\\\"card-title\\\"> Clients </h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table table-striped\\\">\\n                                <thead class=\\\"text-primary\\\">\\n                                    <th class=\\\"text-center\\\">\\n                                        #\\n                                    </th>\\n                                    <th class=\\\"text-center\\\">\\n                                    </th>\\n                                    <th>\\n                                        Name\\n                                    </th>\\n                                    <th>\\n                                        Role\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let u of clients;let i=index\\\">\\n                                        <td class=\\\"text-center\\\">\\n                                            {{i+1}}\\n                                        </td>\\n                                        <td>\\n                                           {{u.name}}\\n                                        </td>\\n                                        <td>\\n                                            {{u.rolename}}\\n                                        </td>\\n                                        <td class=\\\"text-right\\\">\\n                                            <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm \\\">\\n                                                <i class=\\\"fa fa-user\\\"></i>\\n                                            </button> -->\\n                                            <button type=\\\"button\\\" rel=\\\"tooltip\\\" (click)=\\\"OpenChat(u.uid ,u.name)\\\" class=\\\"btn btn-success btn-icon btn-md btn-round \\\">\\n                                                <i class=\\\"nc-icon nc-chat-33\\\"></i></button>\\n                                        </td>\\n                                     \\n                                    </tr>\\n    \\n                                    \\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n          \\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n    <div class=\\\"card\\\" *ngIf=\\\"notchat\\\"   > \\n        <div class=\\\"row\\\" >\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h4 class=\\\"card-title\\\"> {{client}} </h4>\\n                    </div>\\n                    <div class=\\\"card-body scroll\\\" >\\n                        <div class=\\\"row\\\" *ngFor=\\\"let message of messages\\\">\\n                            <div class=\\\"col-md-10\\\"  *ngIf=\\\"message.sender != userid\\\"  style=\\\"background-color: rgb(233, 233, 229);border-radius: 20px; border-style: solid;border-width: 1px;padding:4px;border-color: rgb(233, 233, 229);margin-top: 4px;;margin-left: 20px;;\\\">\\n                               <span class=\\\"user_name\\\" style=\\\"color:gray;font-size: 0.7rem;\\\">{{ message.sendername }}</span><br>\\n                              <span style=\\\"color:black;font-size: 1rem;\\\">{{ message.message}}</span>\\n                              <div class=\\\"time\\\" style=\\\"color:gray;font-size: 0.5rem;margin-top: 3px;\\\">{{message.createddate | date:'dd.MM hh:MM'}}</div>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\"></div>\\n                            <div class=\\\"col-md-10\\\"  *ngIf=\\\"message.sender == userid\\\"  style=\\\"color:#ffffff;background-color:#124244;border-radius:20px;border-style: solid;border-width: 1px;padding:4px;margin-top: 4px;;\\\">\\n                                <span class=\\\"user_name\\\" style=\\\"color:gray;font-size: 0.7rem;\\\">{{ uname }}</span><br>\\n                                <span style=\\\"color:white ; font-size: 1rem;\\\">{{ message.message }}</span>\\n                              <div class=\\\"time\\\" style=\\\"color:rgb(204, 209, 209);font-size: 0.5rem;margin-top: 3px;;\\\">{{message.createddate | date:'dd.MM hh:MM'}}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> \\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" >\\n            <div style=\\\"height:10px;\\\">\\n            <div  class=\\\"row\\\" >\\n              <div class=\\\"col-md-10\\\"  style=\\\"margin-top: -1%;\\\">\\n                  <input type=\\\"text\\\" placeholder=\\\"Message\\\" [(ngModel)]=\\\"message\\\" style=\\\"height:2.5rem;border-radius: 30px;border-width: 1px;;border-style: solid;border-color: red;width: 100%;\\\">\\n              </div>\\n              <div class=\\\"col-md-2\\\" style=\\\"text-align: center; font-size: 1.8rem !important ; \\\">\\n                  <i class=\\\"nc-icon nc-send\\\" (click)=\\\"sendMessage()\\\" ></i>\\n              </div>\\n             \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            \\n\";"],"sourceRoot":"webpack:///"}