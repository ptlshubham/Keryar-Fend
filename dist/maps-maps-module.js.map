{"version":3,"sources":["./src/app/maps/fullscreenmap/fullscreenmap.component.html","./src/app/maps/googlemaps/googlemaps.component.ts","@ngui/map/out/services/util.ts","@ngui/map/out/directives/base-map-directive.ts","@ngui/map/out/services/option-builder.ts","@ngui/map/out/services/navigator-geolocation.ts","@ngui/map/out/services/config.ts","@ngui/map/out/services/api-loader.ts","@ngui/map/out/services/geo-coder.ts","@ngui/map/out/services/ngui-map.ts","@ngui/map/out/components/ngui-map.component.ts","@ngui/map/out/directives/bicycling-layer.ts","@ngui/map/out/components/info-window.ts","@ngui/map/out/components/custom-marker.ts","@ngui/map/out/directives/circle.ts","@ngui/map/out/directives/data-layer.ts","@ngui/map/out/directives/directions-renderer.ts","@ngui/map/out/directives/drawing-manager.ts","@ngui/map/out/directives/ground-overlay.ts","@ngui/map/out/directives/heatmap-layer.ts","@ngui/map/out/directives/kml-layer.ts","@ngui/map/out/directives/marker.ts","@ngui/map/out/directives/places-auto-complete.ts","@ngui/map/out/directives/polygon.ts","@ngui/map/out/directives/polyline.ts","@ngui/map/out/directives/street-view-panorama.ts","@ngui/map/out/directives/traffic-layer.ts","@ngui/map/out/directives/transit-layer.ts","@ngui/map/out/ngui-map.module.ts","./src/app/maps/fullscreenmap/fullscreenmap.component.ts","./src/app/maps/vectormaps/vectormaps.component.ts","./src/app/maps/googlemaps/googlemaps.component.html","./src/app/maps/maps.routing.ts","./src/app/maps/vectormaps/vectormaps.component.html","./src/app/maps/maps.module.ts"],"names":["INPUTS","OUTPUTS"],"mappings":"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","file":"maps-maps-module.js","sourcesContent":["export default \"<div class=\\\"main-content\\\">\\n\\n          <ngui-map zoom=\\\"13\\\" center=\\\"40.748817,-73.985428\\\" style=\\\"margin-top:60px;height: 100%; width: 100%; position: absolute;top: 0px;\\n    left: 0px;\\n    background-color: rgb(229, 227, 223);\\\">\\n              <marker [position]=\\\"[40.748817,-73.985428]\\\"></marker>\\n          </ngui-map>\\n\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\n\ndeclare var google: any;\ndeclare var $: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'vector-maps-cmp',\n    templateUrl: './googlemaps.component.html'\n})\n\nexport class GoogleMapsComponent implements OnInit{\n\n    ngOnInit(){\n    \n\n    }\n}\n","/**\n * return json string from json-like string\n */\nexport function jsonize(str: string): string {\n  try {       // if parsable already, return as it is\n    JSON.parse(str);\n    return str;\n  } catch (e) { // if not parsable, change little\n    return str\n      .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\":';\n        }\n      )\n      .replace(/'([^']+)'/g,   // replacing single quote to double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\"';\n        }\n      );\n  }\n}\n\n/**\n * Returns string to an object by using JSON.parse()\n */\nexport function getJSON(input: any): any {\n  if (typeof input === 'string') {\n    const re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n    if (input.match(re)) {\n      input = '[' + input + ']';\n    }\n    return JSON.parse(jsonize(input));\n  } else {\n    return input;\n  }\n}\n\n/**\n * json type definition\n */\n/* tslint:disable */\n//interface IJsonArray extends Array<string|number|boolean|Date|IJson|IJsonArray> { }\nexport interface IJson {\n  //[x: string]: string|number|boolean|Date|IJson|IJsonArray;\n  [x: string]: string|number|boolean|Date|IJson|Array<string|number|boolean|Date|IJson>;\n}\n/* tslint:enable */\n\n\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n */\nexport function toCamelCase(str: string): string {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n\nexport function isMapsApiLoaded() {\n  return typeof google === 'object' && typeof google.maps === 'object';\n}\n\nexport function missingLibraryError(component, libName) {\n  return Error(`${component}: library '${libName}' is missing, please ensure to include it in a 'libraries' parameter.\n    Example:\n      NguiMapModule.forRoot({\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=${libName}'\n      })\n  `);\n}","import {EventEmitter, SimpleChanges, Output, OnInit, OnChanges, OnDestroy} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { missingLibraryError } from '../services/util';\nexport abstract class BaseMapDirective implements OnInit, OnChanges, OnDestroy {\n  // this should be redefined on each childr directive\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public mapObject: any; // e.g. google.maps.Marker\n  public objectOptions: any; // e.g. google.maps.MarkerOptions\n\n  public nguiMap: NguiMap;\n  public optionBuilder: OptionBuilder;\n  public libraryName: string;\n  protected _subscriptions = [];\n\n  constructor(\n    protected nguiMapComponent: NguiMapComponent,\n    public    mapObjectName: string,\n    protected inputs: string[],\n    protected outputs: string[]\n  ) {\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n    // all outputs must be initialized\n    this.outputs.forEach(output => this[output] = new EventEmitter());\n    this.mapObjectName = mapObjectName;\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n    typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\n    // noinspection TypeScriptUnresolvedFunction\n    if (this.libraryName) {\n      if (!google.maps[this.libraryName]) {\n        throw missingLibraryError(this.mapObjectName, this.libraryName);\n      }\n      this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n    } else {\n      this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n    }\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When input is changed, update object too.\n  // e.g., when map center is changed by user, update center on the map\n  ngOnChanges(changes: SimpleChanges) {\n\n    this.nguiMap.updateGoogleObject(this.mapObject, changes);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n    this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { getJSON, IJson } from './util';\n\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\n@Injectable()\nexport class OptionBuilder {\n\n  googlizeAllInputs(definedInputs: string[], userInputs: any) {\n    let options: any = {};\n\n    // if options given from user, only take options and ignore other inputs\n    if (userInputs.options) {\n\n      options = userInputs.options;\n      if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n        console.error('when \"options\" are used, other options are ignored');\n      }\n    } else { // if options not given, process all user inputs\n      definedInputs.forEach(input => {\n        if (userInputs[input] !== undefined)  {\n          options[input] = this.googlize(userInputs[input], {key: input});\n        }\n      });\n    }\n    return options;\n  }\n\n  googlizeMultiple(inputs: any[], options?: IJson): any {\n    options =  options || {};\n    for (let key in inputs) {\n      let val = inputs[key];\n      // (non-strings are fully converted)\n      if (typeof val !== 'string') {\n        options[key] = val;\n      } // sometimes '0' needed to stay as it is\n      else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n        options[key] = this.googlize(val, {key: key});\n      }\n    } // for(var key in attrs)\n    return options;\n  }\n\n  googlize(input: any, options?: IJson): any {\n    options = options || {};\n    let output: any = input;\n    if (typeof input === 'string') { // convert string to a google object\n      if (input === 'false') {\n        output = false;\n      } else if (input === '0') {\n        output = 0;\n      } else {\n        output =\n          // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n          this.getJSONParsed(input, options)\n\n          /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n          || this.getAnyMapObject(input)\n\n          /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n          || this.getAnyMapConstant(input, options)\n\n          /*  2016-06-20 -> new Date('2016-06-20') */\n          || this.getDateObject(input)\n\n          || input;\n      }\n    }\n\n    if (options['key']) {\n      let key: string = <string>options['key'];\n      if (output instanceof Array) { // e.g., [1, 2]\n        if (key === 'bounds') {\n          output = new google.maps.LatLngBounds(output[0], output[1]);\n        } else if (key === 'icons') {\n          output = this.getMapIcons(output);\n        } else if (key === 'position' || key.match(/^geoFallback/) ) {\n          output = this.getLatLng(output);\n        }\n      } else if (output instanceof Object) {\n        if (key === 'icon') {\n          output = this.getMarkerIcon(output);\n        }\n        else if (key.match(/ControlOptions$/)) {\n          output = this.getMapControlOption(output);\n        }\n      }\n    }\n\n    // delete keys only for processing, not used by google\n    delete output['doNotConverStringToNumber'];\n    delete output['key'];\n\n    return output;\n  }\n\n  private getLatLng(input: any): google.maps.LatLng | Array<google.maps.LatLng> {\n    let output: google.maps.LatLng | Array<google.maps.LatLng>;\n    if (input[0].constructor === Array) { // [[1,2],[3,4]]\n      output = (<any[]>input).map((el: number[]) => new google.maps.LatLng(el[0], el[1]));\n    } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n      output = new google.maps.LatLng(input[0], input[1]);\n    }\n    return output;\n  }\n\n  private getJSONParsed(input: any, options: IJson): IJson {\n    let output: any;\n    try {\n      output = getJSON(input);\n      if (output instanceof Array) {\n        // [{a:1}] : not lat/lng ones\n\n        if (output[0].constructor !== Object) { // [[1,2],[3,4]] or [1,2]\n          output = this.getLatLng(output);\n        }\n      }\n      // JSON is an object (not array or null)\n      else if (output === Object(output)) {\n        // check for nested hashes and convert to Google API options\n        let newOptions = options;\n        newOptions['doNotConverStringToNumber'] = true;\n        output = this.googlizeMultiple(output, newOptions);\n      }\n    } catch (e) {\n    }\n    return output;\n  }\n\n  private getAnyMapObject(input: string): any {\n    let output: any;\n    if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n      try {\n        output = Function(`return new google.maps.${input};`)();\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getAnyMapConstant(input: string, options: IJson): any {\n    let output: any;\n\n    if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) { // e.g. MapTypeID.HYBRID\n      try {\n        let matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n        output = google.maps[matches[1]][matches[2]];\n      } catch (e) {}\n    } else if (input.match(/^[A-Z]+$/)) { // e.g. HYBRID\n      try {\n        let capitalizedKey = (<string>options['key']).charAt(0).toUpperCase() +\n          (<string>options['key']).slice(1);\n        output = google.maps[capitalizedKey][input];\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  /**\n   * streetviewControl, panControl, etc, not a general control\n   */\n  private getMapControlOption(controlOptions: IJson): IJson {\n    let newControlOptions: IJson = controlOptions;\n\n    for (let key in newControlOptions) { // assign the right values\n      if (newControlOptions[key]) {\n        let value = newControlOptions[key];\n\n        if (typeof value === 'string') {\n          value = (<string>value).toUpperCase();\n        }\n        else if (key === 'mapTypeIds') {\n          value = (<any[]>value).map(function (str) {\n            if (str.match(/^[A-Z]+$/)) { // if constant\n              return google.maps.MapTypeId[str.toUpperCase()];\n            } else { // else, custom map-type\n              return str;\n            }\n          });\n        }\n\n        if (key === 'style') {\n          let objName = key.replace(/Options$/, '') + 'Style';\n          newControlOptions[key] = google.maps[objName][<any>value];\n        }\n        else if (key === 'position') {\n          newControlOptions[key] = google.maps.ControlPosition[<any>value];\n        }\n        else {\n          newControlOptions[key] = value;\n        }\n      }\n    }\n\n    return newControlOptions;\n  }\n\n  private getDateObject(input: string): Date {\n    let output: Date;\n\n    if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n      try {\n        output = new Date(input);\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getMapIcons(input: any[]): any[] {\n    return input.map(el => {\n      if (el.icon.path.match(/^[A-Z_]+$/)) {\n        el.icon.path = google.maps.SymbolPath[el.icon.path];\n      }\n      return el;\n    });\n  }\n\n  private getMarkerIcon(input: any): any {\n    let output = input;\n\n    if (('' + output.path).match(/^[A-Z_]+$/)) {\n      output.path = google.maps.SymbolPath[output.path];\n    }\n\n    for (let key in output) {\n      let arr = output[key];\n      if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n        output[key] = new google.maps.Point(arr[0], arr[1]);\n    } else if (key === 'size' || key === 'scaledSize') {\n        output[key] = new google.maps.Size(arr[0], arr[1]);\n      }\n    }\n\n    return output;\n  }\n\n  private onlyOptionsGiven(definedInputs: string[], userInputs: any): boolean {\n    for (let i = 0; i < definedInputs.length; i++) {\n      let input = definedInputs[i];\n      if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { IJson } from './util';\n\n/**\n *  service for navigator.geolocation methods\n */\n@Injectable()\nexport class NavigatorGeolocation {\n\n  getCurrentPosition(geoLocationOptions?: IJson): Observable<any> {\n    geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\n    return new Observable<any>((responseObserver: Observer<any>) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            responseObserver.next(position);\n            responseObserver.complete();\n          },\n          (evt) => responseObserver.error(evt),\n          geoLocationOptions\n        );\n      } else {\n        responseObserver.error('Browser Geolocation service failed.');\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NG_MAP_CONFIG_TOKEN = new InjectionToken<ConfigOption>('NG_MAP_CONFIG_TOKEN');\nexport interface ConfigOption {\n  apiUrl?: string;\n}\n","import { Injectable, Inject, Optional, NgZone, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { NG_MAP_CONFIG_TOKEN } from './config';\nimport { isMapsApiLoaded } from './util';\n\nexport abstract class NgMapApiLoader implements OnDestroy {\n  api$: ReplaySubject<any> = new ReplaySubject(1);\n\n  abstract load();\n\n  constructor(protected config) {\n    this.config = this.config || {apiUrl: 'https://maps.google.com/maps/api/js'};\n  }\n\n  ngOnDestroy() {\n    this.api$.complete();\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n  constructor(protected zone: NgZone, @Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      (<any>window)['nguiMapRef'] = (<any>window)['nguiMapRef'] || [];\n      (<any>window)['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps)});\n      this.addGoogleMapsApi();\n    }\n  }\n\n  private addGoogleMapsApi() {\n    (<any>window)['initNguiMap'] = (<any>window)['initNguiMap'] || function() {\n      (<any>window)['nguiMapRef'].forEach(nguiMapRef => {\n        nguiMapRef.zone.run(function() { nguiMapRef.componentFn(); });\n      });\n      (<any>window)['nguiMapRef'].splice(0, (<any>window)['nguiMapRef'].length);\n    };\n\n    let script = document.createElement( 'script' );\n    script.id = 'ngui-map-api';\n\n    // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n    let apiUrl = this.config.apiUrl ;\n    apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n    script.src = apiUrl + 'callback=initNguiMap';\n    document.querySelector('body').appendChild(script);\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncApiLoader extends NgMapApiLoader {\n  constructor(@Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      let script = document.createElement('script');\n      script.id = 'ngui-map-api';\n\n      script.async = true;\n      script.onload = () => this.api$.next(google.maps);\n      script.src = this.config.apiUrl;\n      document.querySelector('body').appendChild(script);\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapApiLoader } from './api-loader';\n\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\n\n@Injectable()\nexport class GeoCoder implements OnDestroy {\n  private apiLoaderSubs = [];\n  constructor(private apiLoader: NgMapApiLoader) {}\n\n  geocode(options: google.maps.GeocoderRequest) {\n    return new Observable((responseObserver: Observer<any>) => {\n        this.apiLoaderSubs.push(this.apiLoader.api$\n          .subscribe(() => this.requestGeocode(options, responseObserver)));\n    });\n  }\n\n  ngOnDestroy() {\n    this.apiLoaderSubs.map(sub => sub.unsubscribe());\n  }\n\n  private requestGeocode(options, observer) {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        observer.next(results);\n        observer.complete();\n      } else {\n        observer.error(results);\n      }\n    });\n  }\n}\n","import { Injectable, SimpleChanges, NgZone } from '@angular/core';\nimport { OptionBuilder } from './option-builder';\nimport { GeoCoder } from './geo-coder';\n\n/**\n * collection of map instance-related properties and methods\n */\n@Injectable()\nexport class NguiMap {\n\n  constructor(\n    private geoCoder: GeoCoder,\n    private optionBuilder: OptionBuilder,\n    private zone: NgZone,\n  ) {}\n\n  setObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent),\n        zone = this.zone;\n      zone.runOutsideAngular(() => {\n        thisObj[prefix].addListener(eventName, function(event: google.maps.event) {\n          let param: any = event ? event : {};\n          param.target = this;\n          zone.run(() => thisObj[definedEvent].emit(param));\n        });\n      });\n    });\n  }\n\n  clearObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent);\n      this.zone.runOutsideAngular(() => {\n        if (thisObj[prefix]) {\n          google.maps.event.clearListeners(thisObj[prefix], eventName);\n        }\n      });\n    });\n\n    if (thisObj[prefix]) {\n      if (thisObj[prefix].setMap) {\n        thisObj[prefix].setMap(null);\n      }\n\n      delete thisObj[prefix].nguiMapComponent;\n      delete thisObj[prefix];\n    }\n\n  }\n\n  updateGoogleObject = (object: any, changes: SimpleChanges)  => {\n    let val: any, currentValue: any, setMethodName: string;\n    if (object) {\n      for (let key in changes) {\n        setMethodName = `set${key.replace(/^[a-z]/, x => x.toUpperCase()) }`;\n        currentValue = changes[key].currentValue;\n        if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n          // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n          ((setMethodName) => {\n            this.geoCoder.geocode({address: currentValue}).subscribe(results => {\n              if (typeof object[setMethodName] === 'function') {\n                object[setMethodName](results[0].geometry.location);\n              } else {\n                console.error(\n                  'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                  'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n                );\n              }\n            });\n          })(setMethodName);\n        } else {\n          val =  this.optionBuilder.googlize(currentValue);\n          if (typeof object[setMethodName] === 'function') {\n            object[setMethodName](val);\n          } else {\n            console.error(\n              'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n              'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  private getEventName(definedEvent) {\n    return definedEvent\n      .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n      .replace(/^map_/, '');                               // map_click -> click  to avoid DOM conflicts\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  EventEmitter,\n  SimpleChanges,\n  Output,\n  NgZone,\n  AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { toCamelCase } from '../services/util';\n\nconst INPUTS = [\n  'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n  'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n  'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n  'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n  'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n  'options',\n  // ngui-map-specific inputs\n  'geoFallbackCenter'\n];\n\nconst OUTPUTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n  'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n  'tilesloaded', 'tile_changed', 'zoom_changed',\n  // to avoid DOM event conflicts\n  'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\n\n@Component({\n  selector: 'ngui-map',\n  providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n  styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\n  // declare INPUTS for AOT compiler\n  public backgroundColor: any; // generated by ngc-pre-compiler.js\n  public center: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public draggableCursor: any; // generated by ngc-pre-compiler.js\n  public draggingCursor: any; // generated by ngc-pre-compiler.js\n  public heading: any; // generated by ngc-pre-compiler.js\n  public keyboardShortcuts: any; // generated by ngc-pre-compiler.js\n  public mapMaker: any; // generated by ngc-pre-compiler.js\n  public mapTypeControl: any; // generated by ngc-pre-compiler.js\n  public mapTypeId: any; // generated by ngc-pre-compiler.js\n  public maxZoom: any; // generated by ngc-pre-compiler.js\n  public minZoom: any; // generated by ngc-pre-compiler.js\n  public noClear: any; // generated by ngc-pre-compiler.js\n  public overviewMapControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControl: any; // generated by ngc-pre-compiler.js\n  public scaleControl: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public streetView: any; // generated by ngc-pre-compiler.js\n  public styles: any; // generated by ngc-pre-compiler.js\n  public tilt: any; // generated by ngc-pre-compiler.js\n  public zoom: any; // generated by ngc-pre-compiler.js\n  public streetViewControl: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n  public mapTypeControlOptions: any; // generated by ngc-pre-compiler.js\n  public overviewMapControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControlOptions: any; // generated by ngc-pre-compiler.js\n  public scaleControlOptions: any; // generated by ngc-pre-compiler.js\n  public streetViewControlOptions: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public bounds_changed: any; // generated by ngc-pre-compiler.js\n  public center_changed: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public heading_changed: any; // generated by ngc-pre-compiler.js\n  public idle: any; // generated by ngc-pre-compiler.js\n  public maptypeid_changed: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public projection_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public tilesloaded: any; // generated by ngc-pre-compiler.js\n  public tile_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n  public mapClick: any; // generated by ngc-pre-compiler.js\n  public mapMouseover: any; // generated by ngc-pre-compiler.js\n  public mapMouseout: any; // generated by ngc-pre-compiler.js\n  public mapMousemove: any; // generated by ngc-pre-compiler.js\n  public mapDrag: any; // generated by ngc-pre-compiler.js\n  public mapDragend: any; // generated by ngc-pre-compiler.js\n  public mapDragstart: any; // generated by ngc-pre-compiler.js\n\n  @Output() public mapReady$: EventEmitter<any> = new EventEmitter();\n\n  public el: HTMLElement;\n  public map: google.maps.Map;\n  public mapOptions: google.maps.MapOptions = {};\n\n  public inputChanges$ = new Subject();\n\n  // map objects by group\n  public infoWindows: { [id: string]: InfoWindow } = { };\n\n  // map has been fully initialized\n  public mapIdledOnce: boolean = false;\n\n  private initializeMapAfterDisplayed = false;\n  private apiLoaderSub;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public geolocation: NavigatorGeolocation,\n    public geoCoder: GeoCoder,\n    public nguiMap: NguiMap,\n    public apiLoader: NgMapApiLoader,\n    public zone: NgZone,\n  ) {\n    apiLoader.load();\n\n    // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  ngAfterViewInit() {\n    this.apiLoaderSub = this.apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initializeMap());\n  }\n\n  ngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  initializeMap(): void {\n    this.el = this.elementRef.nativeElement.querySelector('.google-map');\n    if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n    }\n\n    this.initializeMapAfterDisplayed = false;\n    this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\n\n    this.mapOptions.zoom = this.mapOptions.zoom || 15;\n    typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\n    this.zone.runOutsideAngular(() => {\n      this.map = new google.maps.Map(this.el, this.mapOptions);\n      this.map['mapObjectName'] = 'NguiMapComponent';\n\n      if (!this.mapOptions.center) { // if center is not given as lat/lng\n        this.setCenter();\n      }\n\n      // set google events listeners and emits to this outputs listeners\n      this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n\n      this.map.addListener('idle', () => {\n        if (!this.mapIdledOnce) {\n          this.mapIdledOnce = true;\n          setTimeout(() => { // Why????, subsribe and emit must not be in the same cycle???\n            this.mapReady$.emit(this.map);\n          });\n        }\n      });\n\n      // update map when input changes\n      this.inputChanges$.pipe(\n        debounceTime(1000),\n        tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.map, changes)),\n      ).subscribe();\n\n      if (typeof window !== 'undefined' && (<any>window)['nguiMapRef']) {\n        // expose map object for test and debugging on (<any>window)\n        (<any>window)['nguiMapRef'].map = this.map;\n      }\n    });\n  }\n\n  setCenter(): void {\n    if (!this['center']) { // center is not from user. Thus, we set the current location\n      this.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.map.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map: Error finding the current position');\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      );\n    }\n    else if (typeof this['center'] === 'string') {\n      this.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.map.setCenter(results[0].geometry.location);\n        },\n        error => {\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n    }\n  }\n\n  openInfoWindow(id: string, anchor: google.maps.MVCObject) {\n    this.infoWindows[id].open(anchor);\n  }\n\n  closeInfoWindow(id: string) {\n    // if infoWindow for id exists, close the infoWindow\n    if (this.infoWindows[id])\n      this.infoWindows[id].close();\n  }\n\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.el && !this.initializeMapAfterDisplayed) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n    }\n    if (this.apiLoaderSub) {\n      this.apiLoaderSub.unsubscribe();\n    }\n  }\n\n  // map.markers, map.circles, map.heatmapLayers.. etc\n  addToMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    this.map[groupName] = this.map[groupName] || [];\n    this.map[groupName].push(mapObject);\n  }\n\n  removeFromMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    if (this.map && this.map[groupName]) {\n      let index = this.map[groupName].indexOf(mapObject);\n\n      (index > -1) && this.map[groupName].splice(index, 1);\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > bicycling-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class BicyclingLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n  }\n}","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild, ViewContainerRef,\n  Output, OnInit, OnChanges, OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst INPUTS = [\n  'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\n\n@Component({\n  selector: 'ngui-map > info-window',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `<div #template><ng-content></ng-content></div>`,\n})\nexport class InfoWindow implements OnInit, OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public content: any; // generated by ngc-pre-compiler.js\n  public disableAutoPan: any; // generated by ngc-pre-compiler.js\n  public maxWidth: any; // generated by ngc-pre-compiler.js\n  public pixelOffset: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public content_changed: any; // generated by ngc-pre-compiler.js\n  public domready: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public zindex_changed: any; // generated by ngc-pre-compiler.js\n\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public infoWindow: google.maps.InfoWindow;\n  public objectOptions: google.maps.InfoWindowOptions = {};\n  public inputChanges$ = new Subject();\n  @ViewChild('template', {read: ViewContainerRef}) template: ViewContainerRef;\n\n  constructor(\n    private elementRef: ElementRef,\n    private nguiMap: NguiMap,\n    private nguiMapComponent: NguiMapComponent,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  // called when map is ready\n  initialize(): void {\n\n\n    this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n    this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n    this.infoWindow['mapObjectName'] = 'InfoWindow';\n\n\n    // register infoWindow ids to NguiMap, so that it can be opened by id\n    if (this.elementRef.nativeElement.id) {\n      this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n    } else {\n      console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n    }\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\n    // update object when input changes\n    this.inputChanges$.pipe(\n      debounceTime(1000),\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.infoWindow, changes))\n    ).subscribe();\n\n    this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n    this.initialized$.emit(this.infoWindow);\n  }\n\n  open(anchor: google.maps.MVCObject) {\n    // set content and open it\n    this.infoWindow.setContent(this.template.element.nativeElement);\n    this.infoWindow.open(this.nguiMapComponent.map, anchor);\n  }\n  close() {\n    // check if infoWindow exists, and closes it\n    if (this.infoWindow)\n      this.infoWindow.close();\n  }\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.infoWindow) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'infoWindow');\n      delete this.infoWindow;\n    }\n  }\n}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges, OnInit, OnDestroy, OnChanges,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\nimport { NguiMap } from '../services/ngui-map';\r\nimport { NguiMapComponent } from './ngui-map.component';\r\n\r\nconst INPUTS = [\r\n  'position'\r\n];\r\n// to avoid DOM event conflicts map_*\r\nconst OUTPUTS = [\r\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\r\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\r\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\r\n  'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\r\n];\r\n\r\n/**\r\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\r\n * Otherwise throws a google is unknown error.\r\n */\r\nfunction getCustomMarkerOverlayView(htmlEl: HTMLElement, position: any) {\r\n\r\n  class CustomMarkerOverlayView extends google.maps.OverlayView {\r\n\r\n    private htmlEl: HTMLElement;\r\n    private position: any;\r\n    private zIndex: string;\r\n    private visible: boolean = true;\r\n\r\n    constructor(htmlEl: HTMLElement, position: any) {\r\n      super();\r\n      this.htmlEl = htmlEl;\r\n      this.position = position;\r\n    }\r\n\r\n    onAdd(): void {\r\n      this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\r\n\r\n      // required for correct display inside google maps container\r\n      this.htmlEl.style.position = 'absolute';\r\n    }\r\n\r\n    draw(): void {\r\n      this.setPosition(this.position);\r\n      this.setZIndex(this.zIndex);\r\n      this.setVisible(this.visible);\r\n    }\r\n\r\n    onRemove(): void {\r\n      //\r\n    }\r\n\r\n    getPosition() {\r\n      return this.position;\r\n    }\r\n\r\n    setPosition = (position?: any) => {\r\n      this.htmlEl.style.visibility = 'hidden';\r\n\r\n      if (position.constructor.name === 'Array') {\r\n        this.position = new google.maps.LatLng(position[0], position[1]);\r\n      } else if (typeof position === 'string') {\r\n        let geocoder = new google.maps.Geocoder();\r\n\r\n        geocoder.geocode({address: position}, (results, status) => {\r\n          if (status === google.maps.GeocoderStatus.OK) {\r\n\r\n            this.setPosition(results[0].geometry.location);\r\n          } else {\r\n\r\n          }\r\n        });\r\n      } else if (position && typeof position.lng === 'function') {\r\n        this.position = position;\r\n      }\r\n\r\n      if (this.getProjection() && typeof this.position.lng === 'function') {\r\n        let positionOnMap = () => {\r\n          let projection = this.getProjection();\r\n          if (!projection) {\r\n            return;\r\n          }\r\n          let posPixel = projection.fromLatLngToDivPixel(this.position);\r\n          let x = Math.round(posPixel.x - (this.htmlEl.offsetWidth / 2));\r\n          let y = Math.round(posPixel.y - this.htmlEl.offsetHeight / 2);\r\n          this.htmlEl.style.left = x + 'px';\r\n          this.htmlEl.style.top = y + 'px';\r\n          this.htmlEl.style.visibility = 'visible';\r\n        };\r\n\r\n        if (this.htmlEl.offsetWidth && this.htmlEl.offsetHeight) {\r\n          positionOnMap();\r\n        } else {\r\n          setTimeout(() => positionOnMap());\r\n        }\r\n      }\r\n    }\r\n\r\n    setZIndex(zIndex: string): void {\r\n      zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\r\n      this.htmlEl.style.zIndex = this.zIndex;\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n      this.htmlEl.style.display = visible ? 'inline-block' : 'none';\r\n      this.visible = visible;\r\n    }\r\n  }\r\n\r\n  return new CustomMarkerOverlayView(htmlEl, position);\r\n}\r\n\r\n@Component({\r\n  selector: 'ngui-map > custom-marker',\r\n  inputs: INPUTS,\r\n  outputs: OUTPUTS,\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\n\r\nexport class CustomMarker implements OnInit, OnDestroy, OnChanges {\n  // declare INPUTS for AOT compiler\n  public position: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n  public map_click: any; // generated by ngc-pre-compiler.js\n  public map_mouseover: any; // generated by ngc-pre-compiler.js\n  public map_mouseout: any; // generated by ngc-pre-compiler.js\n  public map_mouseup: any; // generated by ngc-pre-compiler.js\n  public map_mousedown: any; // generated by ngc-pre-compiler.js\n  public map_drag: any; // generated by ngc-pre-compiler.js\n  public map_dragend: any; // generated by ngc-pre-compiler.js\n\r\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\r\n\r\n  public inputChanges$ = new Subject();\r\n\r\n  private el: HTMLElement;\r\n  private mapObject: any;\r\n\r\n  constructor(private nguiMapComponent: NguiMapComponent,\r\n              private elementRef: ElementRef,\r\n              private nguiMap: NguiMap) {\r\n    this.elementRef.nativeElement.style.display = 'none';\r\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\r\n  }\r\n\r\n  // Initialize this map object when map is ready\r\n  ngOnInit() {\r\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\r\n      this.initialize();\r\n    } else {\r\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.inputChanges$.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputChanges$.complete();\r\n    this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\r\n\r\n    if (this.mapObject) {\r\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'mapObject');\r\n    }\r\n  }\r\n\r\n  private initialize(): void {\r\n\r\n    this.el = this.elementRef.nativeElement;\r\n\r\n    this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\r\n    this.mapObject.setMap(this.nguiMapComponent.map);\r\n\r\n    // set google events listeners and emits to this outputs listeners\r\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'mapObject');\r\n\r\n    // update object when input changes\r\n    this.inputChanges$.pipe(\r\n      debounceTime(1000),\r\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.mapObject, changes)),\r\n    ).subscribe();\r\n\r\n    this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\r\n    this.initialized$.emit(this.mapObject);\r\n  }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackCenter'\n];\nconst OUTPUTS = [\n  'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n  'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>circle, ngui-map>map-circle',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Circle extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public center: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public centerChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public radiusChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Circle;\n  public objectOptions: google.maps.CircleOptions = <google.maps.CircleOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Circle', INPUTS, OUTPUTS);\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setCenter();\n  }\n\n  setCenter(): void {\n    if (!this['center']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        center => {\n\n          let latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n          this.mapObject.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map, error in finding the current position');\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['center'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.mapObject.setCenter(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error in finding location from', this['center']);\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nconst OUTPUTS = [\n  'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n  'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\n\n@Directive({\n  selector: 'ngui-map > data-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DataLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public controlPosition: any; // generated by ngc-pre-compiler.js\n  public controls: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public featureFactory: any; // generated by ngc-pre-compiler.js\n  public style: any; // generated by ngc-pre-compiler.js\n  public geoJson: any; // generated by ngc-pre-compiler.js\n  public geoJsonUrl: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public addfeature: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public removefeature: any; // generated by ngc-pre-compiler.js\n  public removeproperty: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public setgeometry: any; // generated by ngc-pre-compiler.js\n  public setproperty: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComponent: NguiMapComponent) {\n    super(nguiMapComponent, 'Data', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    if (this['geoJson']) {\n      // addGeoJson from an object\n\n      this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n    } else if (this['geoJsonUrl']) {\n      // loadGeoJson from a URL\n\n      this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n    }\n    else {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n      this.nguiMapComponent.map.data.add(this.objectOptions);\n    }\n\n    // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n    this.mapObject = this.nguiMapComponent.map.data;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}","import { Input, Directive, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\n\nconst INPUTS = [\n  'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n  'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n  'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst OUTPUTS = ['directions_changed'];\n\n@Directive({\n  selector: 'ngui-map > directions-renderer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public directions: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public hideRouteList: any; // generated by ngc-pre-compiler.js\n  public infoWindow: any; // generated by ngc-pre-compiler.js\n  public panel: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public routeIndex: any; // generated by ngc-pre-compiler.js\n  public suppressBicyclingLayer: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public suppressMarkers: any; // generated by ngc-pre-compiler.js\n  public suppressPolylines: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public directions_changed: any; // generated by ngc-pre-compiler.js\n\n  // tslint:disable-next-line\n  @Input('directions-request') directionsRequest: google.maps.DirectionsRequest;\n\n  directionsService: google.maps.DirectionsService;\n  directionsRenderer: google.maps.DirectionsRenderer;\n\n  constructor(\n    nguiMapComponent: NguiMapComponent,\n    public geolocation: NavigatorGeolocation\n  ) {\n    super(nguiMapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n    if (typeof this.objectOptions['panel'] === 'string') { // find a Node for panel\n      this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n    }\n\n\n\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\n    this.directionsRenderer.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emidirectionsRenderer to this outputs listeners\n    this.showDirections(this.directionsRequest);\n\n    this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.directionsRenderer);\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    let newOptions = {};\n    for (let key in changes) {\n      if (this.inputs.indexOf(key) !== -1) {\n        newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n      }\n    }\n    if (changes['directionsRequest'] && this.directionsRenderer) {\n      this.directionsService && this.showDirections(this.directionsRequest);\n    }\n  }\n\n  showDirections(directionsRequest: google.maps.DirectionsRequest) {\n    this.directionsService.route(directionsRequest,\n      (response: any, status: any) =>  {\n        // in some-case the callback is called during destroy component,\n        // we should make sure directionsRenderer is still defined (cancelling `route` callback is not possible).\n        if (!this.directionsRenderer) {\n          return;\n        }\n\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n  }\n}","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'options',\n  'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n  'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst OUTPUTS = [\n  'circlecomplete', 'markercomplete', 'overlaycomplete',\n  'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\n\n@Directive({\n  selector: 'ngui-map > drawing-manager',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DrawingManager extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public options: any; // generated by ngc-pre-compiler.js\n  public circleOptions: any; // generated by ngc-pre-compiler.js\n  public drawingControl: any; // generated by ngc-pre-compiler.js\n  public drawingControlOptions: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polygonOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public rectangleOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public circlecomplete: any; // generated by ngc-pre-compiler.js\n  public markercomplete: any; // generated by ngc-pre-compiler.js\n  public overlaycomplete: any; // generated by ngc-pre-compiler.js\n  public polygoncomplete: any; // generated by ngc-pre-compiler.js\n  public polylinecomplete: any; // generated by ngc-pre-compiler.js\n  public rectanglecomplete: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);\n    this.libraryName = 'drawing';\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'url', 'bounds', 'clickable', 'opacity' ];\nconst OUTPUTS = [ 'click', 'dblclick' ];\n\n@Directive({\n  selector: 'ngui-map > ground-overlay',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class GroundOverlay extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public url: any; // generated by ngc-pre-compiler.js\n  public bounds: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.GroundOverlay;\n  public objectOptions: google.maps.GroundOverlayOptions = <google.maps.GroundOverlayOptions>{};\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n  }\n\n  // re-declaring initialize function. called when map is ready\n  initialize(): void {\n    // url, bounds are not the options of GroundOverlay\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\n\n    // noinspection TypeScriptUnresolvedFunction\n    this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options' ];\nconst OUTPUTS = [];\n\n@Directive({\n  selector: 'ngui-map > heatmap-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class HeatmapLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public data: any; // generated by ngc-pre-compiler.js\n  public dissipating: any; // generated by ngc-pre-compiler.js\n  public gradient: any; // generated by ngc-pre-compiler.js\n  public maxIntensity: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  public libraryName = 'visualization';\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options' ];\nconst OUTPUTS = [ 'click', 'defaultviewport_changed', 'status_changed' ];\n\n@Directive({\n  selector: 'ngui-map > kml-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class KmlLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public screenOverlays: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public url: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public defaultviewport_changed: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'KmlLayer', INPUTS, OUTPUTS);\n  }\n}\n","import {Directive, OnInit} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n  'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackPosition'\n];\nconst OUTPUTS = [\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\n\n@Directive({\n  selector: 'ngui-map > marker',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Marker extends BaseMapDirective implements OnInit {\n  // declare INPUTS for AOT compiler\n  public anchorPoint: any; // generated by ngc-pre-compiler.js\n  public animation: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public cursor: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public icon: any; // generated by ngc-pre-compiler.js\n  public label: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public optimized: any; // generated by ngc-pre-compiler.js\n  public place: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public shape: any; // generated by ngc-pre-compiler.js\n  public title: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackPosition: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Marker;\n  public objectOptions: google.maps.MarkerOptions = <google.maps.MarkerOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Marker', INPUTS, OUTPUTS);\n\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setPosition();\n  }\n\n  setPosition(): void {\n    if (!this['position']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.mapObject.setPosition(latLng);\n        },\n        error => {\n          console.error('ngui-map, error finding the current location');\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['position'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['position']}).subscribe(\n        results => {\n\n          this.mapObject.setPosition(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error finding the location from', this['position']);\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n","import {\n  Input,\n  Output,\n  Directive,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { OptionBuilder } from '../services/option-builder';\nimport { missingLibraryError } from '../services/util';\nimport { first } from 'rxjs/operators';\n\n@Directive({\n  selector: '[places-auto-complete]'\n})\nexport class PlacesAutoComplete {\n  @Input() bounds: any;\n  @Input() componentRestrictions: any;\n  @Input() types: string[];\n\n  @Output('place_changed') place_changed: EventEmitter<any> = new EventEmitter();\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public objectOptions: any;\n  public autocomplete: google.maps.places.Autocomplete;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public apiLoader: NgMapApiLoader,\n  ) {\n    apiLoader.load();\n    apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initialize());\n  }\n\n  // only called when map is ready\n  initialize = (): void => {\n    this.objectOptions =\n      this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], this);\n\n\n    if (!google.maps.places) {\n      throw missingLibraryError('PlacesAutoComplete', 'places');\n    }\n\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.elementRef.nativeElement,\n      this.objectOptions\n    );\n\n\n    this.autocomplete.addListener('place_changed', place => {\n      this.place_changed.emit(this.autocomplete.getPlace());\n    });\n\n    this.initialized$.emit(this.autocomplete);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>polygon, ngui-map>map-polygon',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polygon extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public paths: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polygon', INPUTS, OUTPUTS);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n  'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\n\n@Directive({\n  selector: 'ngui-map > polyline',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polyline extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public icons: any; // generated by ngc-pre-compiler.js\n  public path: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polyline', INPUTS, OUTPUTS);\n  }\n}\n","import {Directive, OnDestroy} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'selector', 'options',\n  'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n  'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n  'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n  'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nconst OUTPUTS = [\n  'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n  'visible_changed', 'zoom_changed'\n];\n\n@Directive({\n  selector: 'ngui-map > street-view-panorama',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class StreetViewPanorama extends BaseMapDirective implements OnDestroy {\n  // declare INPUTS for AOT compiler\n  public selector: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public addressControl: any; // generated by ngc-pre-compiler.js\n  public addressControlOptions: any; // generated by ngc-pre-compiler.js\n  public clickToGo: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public enableCloseButton: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public imageDateControl: any; // generated by ngc-pre-compiler.js\n  public linksControl: any; // generated by ngc-pre-compiler.js\n  public motionTracking: any; // generated by ngc-pre-compiler.js\n  public motionTrackingControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public pano: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public pov: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public showRoadLabels: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public pano_changed: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public pov_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n  public visible_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    let element: HTMLElement;\n    if (this.objectOptions.selector) {\n      // noinspection TypeScriptValidateTypes\n      element = document.querySelector(this['selector']);\n      delete this.objectOptions.selector;\n    } else {\n      element = this.nguiMapComponent.el;\n    }\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\n    this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    if (this.nguiMapComponent.el) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}","import { Directive } from '@angular/core';\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['autoRefresh', 'options' ];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > traffic-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TrafficLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public autoRefresh: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n  }\n}","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > transit-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TransitLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TransitLayer', INPUTS, OUTPUTS);\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OptionBuilder } from './services/option-builder';\nimport { GeoCoder } from './services/geo-coder';\nimport { NavigatorGeolocation } from './services/navigator-geolocation';\nimport { NG_MAP_CONFIG_TOKEN, ConfigOption } from './services/config';\nimport { NgMapApiLoader, NgMapAsyncCallbackApiLoader } from './services/api-loader';\n\nimport { NguiMapComponent } from './components/ngui-map.component';\nimport { InfoWindow } from './components/info-window';\nimport { CustomMarker } from './components/custom-marker';\n\nimport { BicyclingLayer } from './directives/bicycling-layer';\nimport { Circle } from './directives/circle';\nimport { DataLayer } from './directives/data-layer';\nimport { DirectionsRenderer } from './directives/directions-renderer';\nimport { DrawingManager } from './directives/drawing-manager';\nimport { GroundOverlay } from './directives/ground-overlay';\nimport { HeatmapLayer } from './directives/heatmap-layer';\nimport { KmlLayer } from './directives/kml-layer';\nimport { Marker } from './directives/marker';\nimport { NguiMap } from './services/ngui-map';\nimport { PlacesAutoComplete } from './directives/places-auto-complete';\nimport { Polygon } from './directives/polygon';\nimport { Polyline } from './directives/polyline';\nimport { StreetViewPanorama } from './directives/street-view-panorama';\nimport { TrafficLayer } from './directives/traffic-layer';\nimport { TransitLayer } from './directives/transit-layer';\n\nconst COMPONENTS_DIRECTIVES = [\n  NguiMapComponent, InfoWindow,\n  Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n  TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n  StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n  DrawingManager,\n];\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: COMPONENTS_DIRECTIVES,\n  exports: [COMPONENTS_DIRECTIVES],\n  providers: [\n    GeoCoder,\n    NavigatorGeolocation,\n    NguiMap,\n    OptionBuilder,\n    {provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader},\n  ]\n})\nexport class NguiMapModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: NguiMapModule,\n      providers: [\n        { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n      ],\n    };\n  }\n}\n","import {Component, OnInit } from '@angular/core';\n\ndeclare var google:any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'fullscreen-map-cmp',\n    templateUrl: 'fullscreenmap.component.html'\n})\n\nexport class FullScreenMapsComponent implements OnInit{\n    ngOnInit(){\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'vector-maps-cmp',\n    templateUrl: './vectormaps.component.html'\n})\n\nexport class VectorMapsComponent implements OnInit{\n    ngOnInit(){\n        var mapData = {\n            \"AU\": 760,\n            \"BR\": 550,\n            \"CA\": 120,\n            \"DE\": 1300,\n            \"FR\": 540,\n            \"GB\": 690,\n            \"GE\": 200,\n            \"IN\": 200,\n            \"RO\": 600,\n            \"RU\": 300,\n            \"US\": 2920,\n        };\n\n        $('#worldMap').vectorMap({\n            map: 'world_mill_en',\n            backgroundColor: \"transparent\",\n            zoomOnScroll: false,\n            regionStyle: {\n                initial: {\n                    fill: '#e4e4e4',\n                    \"fill-opacity\": 0.9,\n                    stroke: 'none',\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                }\n            },\n\n            series: {\n                regions: [{\n                    values: mapData,\n                    scale: [\"#AAAAAA\",\"#444444\"],\n                    normalizeFunction: 'polynomial'\n                }]\n            },\n        });\n    }\n}\n","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card \\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Satellite Map</h4>\\n        </div>\\n        <div class=\\\"card-body \\\">\\n          <ngui-map zoom=\\\"3\\\" center=\\\"40.748817,-73.985428\\\"  mapTypeId=\\\"satellite\\\" >\\n              <marker [position]=\\\"[40.748817,-73.985428]\\\"></marker>\\n          </ngui-map>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card \\\">\\n        <div class=\\\"card-header \\\">\\n          <h4 class='card-title'>Regular Map</h4>\\n        </div>\\n        <div class=\\\"card-body \\\">\\n          <ngui-map zoom=\\\"13\\\" center=\\\"40.748817,-73.985428\\\" >\\n              <marker [position]=\\\"[40.748817,-73.985428]\\\"></marker>\\n          </ngui-map>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Routes } from '@angular/router';\n\nimport { FullScreenMapsComponent } from './fullscreenmap/fullscreenmap.component';\nimport { GoogleMapsComponent } from './googlemaps/googlemaps.component';\nimport { VectorMapsComponent } from './vectormaps/vectormaps.component';\n\nexport const MapsRoutes: Routes = [{\n        path: '',\n        children: [{\n            path: 'fullscreen',\n            component: FullScreenMapsComponent\n        }]\n    },{\n        path: '',\n        children: [{\n            path: 'google',\n            component: GoogleMapsComponent\n        }]\n    },{\n        path: '',\n        children: [{\n            path: 'vector',\n            component: VectorMapsComponent\n        }]\n    }\n];\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"text-center\\\">\\n                    World Map<br />\\n                    <small>\\n                        Looks great on any resolution. Made by our friends from jVector Map.\\n                    </small>\\n                </h3>\\n                <div class=\\\"card card-plain\\\">\\n                    <div class=\\\"card-content\\\">\\n                        <div id=\\\"worldMap\\\" class=\\\"map map-big\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NguiMapModule} from '@ngui/map';\n\nimport { MapsRoutes } from './maps.routing';\n\nimport { FullScreenMapsComponent } from './fullscreenmap/fullscreenmap.component';\nimport { GoogleMapsComponent } from './googlemaps/googlemaps.component';\nimport { VectorMapsComponent } from './vectormaps/vectormaps.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(MapsRoutes),\n        FormsModule,\n        NguiMapModule.forRoot({apiUrl: 'https://maps.google.com/maps/api/js?key=YOUR_KEY_HERE'})\n    ],\n    declarations: [\n        FullScreenMapsComponent,\n        GoogleMapsComponent,\n        VectorMapsComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\n\nexport class MapsModule {}\n"],"sourceRoot":"webpack:///"}